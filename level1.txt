01

	Хорошая вёрстка со стороны
	
	--Пользователя:
	Обратносовместимая, доступная (a11y), предсказуемое поведение элементов управления, совместимость с различными устройствами
	
	--Менеджера проекта:
	Соответсвующая ТЗ и макету, имеет низкий порог входа для нового разработчика

	--Дизайнера:
	Соответствует макету, учтены все пробелы макета (состояние кнопок и элементов управления и т.д), придерживается общей дизайн-системы

	--Верстальщика:
	Удобна в поддержке и доработке (удобная файловая структура, удобно названы классы), автоматизированы рутинные задачи сборщиком, сложно что-либо "сломать"

	--Клиентского программиста:
	Удобна в поддержке и доработке, разбита по компонентам, 

	--Серверного программиста:
	???


02

	При верстке крупных сайтов важно поддерживать удобную структуру: разбивать всё на мелкие компоненты, не повторяться и выносить все повторяющиеся значения в переменные. Придерживаться единой методологии наименования классов (например БЭМ)

	На последнем крупном проекте в предыдущей компании я использовал SCSS, разделял всё на модули, использовал перменные и миксины, использовали БЭМ для наименования классов


03

	В первую очередь важно, чтобы были прописаны префиксы и использовать полифилы. Так же важно проверять вёрстку не просто в дев-тулз, а на реальных устройствах или эмуляторах.
	Префиксы я выставлял с помощью модуля PostCSS Autoprefixer или в некоторых случаях его веб-версией. Для тестирования на разных устройствах я использовал Browserstack. Устройства приходилось поддерживать разные: все современные браузеры и операционные системы и вплоть до IE10.


04 

	Мой редактор кода VS Code с различными расширениями: emmet, tag autocomplete, prettier, eslint и многие другие. Браузер с расширениями для отладки react, redux


05

	Сталкивался. Я бы прогнал стили через autoprefixer, воспроизвел бы проблему с помощью Browserstack


06

	Попробую гармонично подобрать цвет и другие эффекты наведения в соответствии с исходным стилем, затем спрошу его мнения. Я часто сталкивался с этой ситуацией


07 
	
	Medium: фид настроен на англоязычные статьи по теме фронтенда и около IT. Из тех, что вспомню: freeCodeCamp, Codeburst, hackernoon
	Twitter: подписан на значимых людей из коммьюнити
	Хожу на местные питерские митапы и конференции
	Слушаю подкасты: веб-стандарты, Frontend happy hour, Frontend Weekend
	Иногда смотрю на ютубе записи хороших докладов

	На данный момент хочу больше погрузиться в современны JS, React. Возможно, поработать с каким-нибудь серверным ЯП или с node.js

	Спорт и питание, хорошие книги, дизайн интерфейсов, музыка, индустрия киберспорта


08

	Я довольно долго работал удалённо или занимался фрилансом, в последний год работал в аутсорсинговой компании, которая делала ecommerce проекты для зарубежных заказчиков. Получал удовольствие от работы в команде, но, к сожелению, внедрять современные практики из мира фронтенда на тех проектах было проблематично + было много работы с легаси. React, Vue я изучал в свободное время и делал небольшие проекты для себя. Затем я решил уйти и найти работу, где я смогу работать на современном стеке и быстрее вырасти как разработчик. Я очень замотивирован расти и развиваться.
	Мои последние проекты:
	https://github.com/stepbyst3p/react-moodtracker react + redux + firebase + react-router + css.modules
	https://github.com/stepbyst3p/react-ws-cryptochart react, websocket
	https://github.com/stepbyst3p/gigant-store-manager-guide nuxt (vue + vuex + vue-router)
	https://github.com/stepbyst3p/doge-react-chat react + redux